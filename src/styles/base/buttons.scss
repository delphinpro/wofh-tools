//==
//== Buttons
//== ======================================= ==//

$btn-enable-focus-state: false;

@mixin button-variant(
  $button,
  $default-color: $btn-default-color,
  $default-bg: $btn-default-bg,
  $default-border: $btn-default-border
) {
  $color: map-get-safe($button, color, $default-color);
  $background: map-get-safe($button, bg, $default-bg);
  $border: map-get-safe($button, border, $default-border);

  --btn-color: #{$color};
  --btn-background-color: #{$background};
  --btn-border-color: #{$border};
  --btn-focus-shadow-color: #{rgba($background, 0.3)};

  @if $btn-enable-focus-state {
    &.focus,
    &:focus {
      outline: 1px dotted rgba(#fff, 0.7);
      outline-offset: -5px;
    }
  }

  &:hover {
    --btn-color: #{$color};
    --btn-background-color: #{darken($background, 10%)};
    --btn-border-color: #{darken($border, 7%)};
  }
}

@mixin button-size($button: map_get($button-sizes, normal)) {
  $font-size: map-get-safe($button, font-size, $rhythm-base-font-size);
  $line-height: map-get-safe($button, line-height, 1);
  $height: map-get-safe($button, height, 1.5);
  $radius: map-get-safe($button, radius, $btn-border-radius-base);

  @include font($font-size, $line-height);
  height: rhythm($height);
  padding: 0 1.5em;
  border-radius: 0; //$radius;
}

:root {
  --btn-color: #{$btn-default-color};
  --btn-background-color: #{$btn-default-bg};
  --btn-border-color: #{$btn-default-border};
  --btn-focus-shadow-color: #{rgba($btn-default-bg, 0.5)};
}

.btn {
  position: relative;
  display: inline-flex;
  align-items: center;
  margin: 0;
  cursor: pointer;
  user-select: none;
  transition: 0.15s ease-in-out;
  transition-property: color, background-color, border-color, box-shadow;
  text-align: center;
  vertical-align: middle;
  white-space: nowrap;
  //border-bottom-width: 3px;
  color: var(--btn-color);
  border: 1px solid var(--btn-border-color);
  outline: none;
  background-color: var(--btn-background-color);
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  box-shadow: 0 2px 0 0 var(--btn-border-color);
  font-weight: $btn-font-weight;
  touch-action: manipulation;

  &:hover,
  &:focus {
    text-decoration: none;
    color: var(--btn-color);
    //color: $btn-default-color;
  }

  @if $btn-enable-focus-state {
    &.focus,
    &:focus {
      //box-shadow: (
      //  0 2px 0 0 var(--btn-border-color),
      //  0 1px 0 4px var(--btn-focus-shadow-color),
      //);
      outline: 1px dotted rgba(#fff, 0.2);
      outline-offset: -5px;
    }
  }

  &:hover {
    --btn-background-color: #{darken($btn-default-bg, 3%)};
    --btn-border-color: #{darken($btn-default-border, 7%)};
  }

  &.active,
  &:active {
    top: 1px;
    outline: 0 !important;
    background-image: none !important;
    box-shadow: inset 0 3px 5px rgba(0, 0, 0, .125) !important;
  }

  fieldset[disabled] &,
  &.disabled,
  &:disabled {
    cursor: $cursor-disabled;
    opacity: 0.65;
    box-shadow: none;
    //background-color: rgba();
  }

  @at-root {
    a.btn {
      &[disabled],
      &.disabled,
      fieldset[disabled] & {
        pointer-events: none; // Future-proof disabling of clicks on `<a>` elements
      }
    }
  }

  @include button-size(());

  .fa {
    margin-right: 0.5em;
  }

  //==
  //== Alternate colors
  //== ======================================= ==//

  @each $theme, $btn in $button-themes {
    &_#{$theme} {
      @include button-variant($btn);
    }
  }

  //==
  //== Alternate sizes
  //== ======================================= ==//

  @each $size, $btn in $button-sizes {
    @if $size != normal {
      &_#{$size} {
        @include button-size($btn);
      }
    }
  }

  //==
  //== Block button
  //== ======================================= ==//

  &_block {
    display: flex;
    justify-content: center;
    width: 100%;
  }

  //==
  //== Icon only
  //== ======================================= ==//

  &_iconic {
    padding-right: 1em;
    padding-left: 1em;
  }
}
